#!/usr/bin/env node

'use strict';

/*
Usage: sassdoc <src> <dest> [options]

Arguments:
  <src>   Path to your Sass folder.
  <dest>  Path to the destination folder.

Options:
  -h, --help            Bring help.
  --version             Show version.
  -v, --verbose         Run in verbose mode.
  -c, --config=<path>   Path to JSON file containing variable to be passed
                        to the view.
*/

var config, package_;

var fs = require('fs');
var api = require('../src/api');
var logger = require('../src/log');
var docopt = require('docopt').docopt;

var cwd = process.cwd();
var doc = fs.readFileSync(__filename, 'utf-8');
doc = doc.substr(doc.indexOf('/*') + 2);
doc = doc.substr(0, doc.indexOf('*/'));

// Define version
var options = docopt(doc, {
  version: require(__dirname + '/../package.json').version
});

// Enable verbose mode
if (options['--verbose'] === true) {
  logger.enabled = true;
}

// Find configuration file
try {
  config = require(options['--config'] ? (cwd + '/' + options['--config']) : (__dirname + '/../view/view.json'));
}

catch(e) {
  console.log(e);
  throw e;
}

// Find package file
if (typeof config.package === "string") {
  try {
    package_ = require(cwd + '/' + config.package);
  }

  catch(e) {
    logger.log('Can\'t find a package file at `' + cwd + '/' + config.package + '`.');
  }

  if (package_) {
    config.package = package_;
  }
}

// Initialize
if (typeof options['<src>'] !== 'undefined' || typeof options['<dest>'] !== 'undefined') {
  api.documentize(options['<src>'], options['<dest>'], config);
}
